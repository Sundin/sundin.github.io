<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>.NET on Master of Software Engineering</title><link>/categories/.NET/</link><description>Recent content in .NET on Master of Software Engineering</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 06 Dec 2021 00:00:00 +0000</lastBuildDate><atom:link href="/categories/.NET/feed.xml" rel="self" type="application/rss+xml"/><item><title>Token-Based Authorization in .NET Core 6.0</title><link>/token-based-authorization-in-dotnet/</link><pubDate>Mon, 06 Dec 2021 00:00:00 +0000</pubDate><guid>/token-based-authorization-in-dotnet/</guid><description>This blog post describes how to implement token-based authentication and authorization using .NET Core 6.0.
The way this works is that when the user is authenticated, a token containing various claims will be stored in the user&amp;rsquo;s browser. This cookie will be used in subsequent requests, and the claims can be checked on different endpoints in order to provide authorization.
Now let&amp;rsquo;s get coding!
Inside Startup.cs, add the following to the ConfigureServices(IServiceCollection services) method:</description></item></channel></rss>