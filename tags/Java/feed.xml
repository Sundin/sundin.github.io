<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Java on Master of Software Engineering</title><link>/tags/Java/</link><description>Recent content in Java on Master of Software Engineering</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 08 Apr 2021 09:25:58 +0000</lastBuildDate><atom:link href="/tags/Java/feed.xml" rel="self" type="application/rss+xml"/><item><title>Minimize Java Lambda Cold Start Times</title><link>/implementation/aws/2021/04/08/minimize-java-lambda-coldstarts.html/</link><pubDate>Thu, 08 Apr 2021 09:25:58 +0000</pubDate><guid>/implementation/aws/2021/04/08/minimize-java-lambda-coldstarts.html/</guid><description>If you have ever run Java inside a lambda function on AWS, you will have noticed the quite significant cold start times that comes with spinning up the JVM environment. In this post, I will discuss some different tricks you can use to minimize these cold start times.
The problem with cold starts arises when there are no &amp;ldquo;warm&amp;rdquo; lambda available to handle an incoming request, which usally happens whenever an endpoint experiences a large and sudden spike in traffic.</description></item></channel></rss>